#ifndef FEJIX_WINAPI_UTILS_WINDOW_H_
#define FEJIX_WINAPI_UTILS_WINDOW_H_


#include <fejix/base.h>

#include <windows.h>


/**
    Registers a window class and creates a window with it.

    \param opt_class_info
        If NULL and the class name in `window_info` is NULL, a new class with default parameters
        is used.
        If NULL and the class name in `window_info` is NOT NULL, that class is used instead.

        The class name in this struct is ignored. It is automatically generated by the library to
        indicate that the class must be destroyed together with the window.

        Some fields, if unspecified, fall back to the defaults:
        * class name: a special class name generated by the library.
        * instance: `GetModuleHandle(NULL)`.
        * window procedure: `DefWindowProc`.

    \param opt_window_info
        If NULL, the default parameters are used.

        The class name is ignored if you do not explicitly indicate that you want your custom class
        to be used. To indicate that, pass NULL to `class_info` and the class name into here.

        Some fields, if unspecified, fall back to the defaults:
        * class name: the special name of a newly created class (if it is created).
        * instance: `GetModulehandle(NULL)`.
*/
fj_err fj_winapi_window_create(
    HWND *out_window, WNDCLASSEX const *opt_class_info, CREATESTRUCT const *opt_window_info);

/**
    Destroys the window.

    If the library created a window class for that specific window with
    fj_winapi_window_create(), the class is also destroyed. The check is done by checking the name.
*/
fj_err fj_winapi_window_destroy(HWND window);

void fj_winapi_window_set_data(HWND window, void *data);

void *fj_winapi_window_get_data(HWND window);


#endif
